name: Main api workflow

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Setup yarn
        run: |
          corepack enable &&
          corepack install # use the in-repo yarn version

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: 'yarn'

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Create .env file
        run: cp ./.env.example ./.env

      - name: Build
        run: yarn build

      - name: Lint
        run: yarn lint

      - name: Archive artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
  unit-test:
    environment: main
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup yarn
        run: |
          corepack enable &&
          corepack install # use the in-repo yarn version

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: 'yarn'

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Create .env file
        run: cp ./.env.example ./.env

      - name: Unit testing
        run: yarn test:coverage

      #- name: SonarCloud Scan
      #  uses: SonarSource/sonarcloud-github-action@master
      #  env:
      #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  e2e-test:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup yarn
        run: |
          corepack enable &&
          corepack install # use the in-repo yarn version

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: 'yarn'

      - name: Install dependencies
        run: yarn --frozen-lockfile

      - name: Create .env file
        run: cp ./.env.example ./.env

      #- name: Start functional tests container
      #  run: docker compose up -d mongo

      - name: Test
        run: yarn test:e2e

      #- name: Stop functional tests container
      #  if: always()
      #  run: docker compose down
